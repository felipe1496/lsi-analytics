// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @default(nanoid()) @id
  name String
  email String @unique
  password String
  birthDay DateTime
  imageURL String?
  panels Panel[]
  dataFonts DataFont[]
  @@map("USERS")
}

model Panel {
  id String @default(nanoid()) @id
  name String
  description String?
  imageURL String?
  user   User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("PANELS")
}

enum TypeOfStorage {
  DATABASE
  FILE
}

enum DataProvider {
  POSTGRESQL
  CSV
}

model DataFont {
  id String @default(nanoid()) @id
  name String
  typeOfStorage TypeOfStorage
  provider DataProvider
  accessKey String?
  user   User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("DATAFONTS")
}

enum ViewTypeEnum {
  PIECHART
}

enum ViewContentUpdate {
  STATIC
  DYNAMIC
}

model View {
  id String @default(nanoid()) @id
  config Json
  type ViewTypeEnum
  contentUpdate ViewContentUpdate
  sql String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("VIEWS")
}

model StaticViewData {
  id String @default(nanoid()) @id
  data Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("STATIC_VIEW_DATA")
}

model DataSet {
  id String @default(nanoid()) @id
  sql String
  columnsMetadata Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("DATASET")
}